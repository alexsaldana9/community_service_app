
<p id="notice"><%= notice %></p>

<div id="map"> </div>


<div id="events"><br>
<h1>Events</h1><br><br>

<table width=100%>
  <tr>
    <th>
      <%= link_to "Sort by Date", sort: "date" %>
    </th>
    <th>
      <%= link_to "Sort by Name", sort: "name" %>
    </th>
    <th>
      <!-- placeholder for proximity -->
      <%= link_to "Sort by Proximity", sort: "street_address" %>
    </th>
    <th>
    <%= form_tag filter_event_path do %>
        <%= select_tag :categories, options_from_collection_for_select(@categories.where.not(:name=>nil), 'id', 'name'), :include_blank => "Filter by Category..",:required=>true %>
        <%= submit_tag "filter" %>
    <% end %>
    </th>
    <th colspan="12"></th>
  </tr>
</table>

<table>
  <thead>

    <tr>
      <th>Name</th>
      <th>Category</th>
      <th>User</th>
      <th>Date</th>
      <th>Street Address</th>
      <th>City</th>
      <th>State</th>
      <th>Zipcode</th>
      <th>Description</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @events.each do |event| %>
      <tr>
        <td><%= link_to event.name, event %></td>
        <td><%= link_to event.category.name, event.category %></td>
        <td><%= link_to event.user.name, event.user %></td>
        <td><%= event.date %></td>
        <td><%= link_to event.street_address, events_path(:lat => event.latitude, :long => event.longitude) %></td>
        <td><%= event.city %></td>
        <td><%= event.state %></td>
        <td><%= event.zipcode %></td>


        <td><%= event.description %></td>


        <td><%= link_to 'Edit', edit_event_path(event) %></td>
        <td><%= link_to 'Destroy', event, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Event', new_event_path %>

</div>
<br /><br />




<style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 50%;
        margin-top: 50px;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>

<script>
var latitude = <%= @lat || 25.8030828 %>
var longitude = <%= @long || -80.2043746 %>

console.log("Anchor Coordinates: (" + latitude + ", " + longitude + ")" )

var map, infoWindow;
function initMap() {

map = new google.maps.Map(document.getElementById('map'), {
  // center: {lat: 25.8030828, lng: -80.2043746},
  center: {lat: latitude, lng: longitude},
  zoom: 14
});

  infoWindow = new google.maps.InfoWindow;

  // Try HTML5 geolocation.
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      console.log(position);
      var pos = {
        //the thing they clicked on's lat and long

        //get the thing they clicked on
        lat: latitude,
        lng: longitude

      };
      console.log(pos);

      var marker = new google.maps.Marker({
      position: pos,
      map: map,
      title: 'Hello World!'
    });


      // infoWindow.setPosition(pos);
      // infoWindow.setContent('Location found.');
      // infoWindow.open(map);
      map.setCenter(pos);
    }, function() {
      handleLocationError(true, infoWindow, map.getCenter());
    });
  } else {
    // Browser doesn't support Geolocation
    handleLocationError(false, infoWindow, map.getCenter());
  }
}

function handleLocationError(browserHasGeolocation, infoWindow, pos) {
  infoWindow.setPosition(pos);
  infoWindow.setContent(browserHasGeolocation ?
                        'Error: The Geolocation service failed.' :
                        'Error: Your browser doesn\'t support geolocation.');
  infoWindow.open(map);
}
</script>
<script async defer
src="https://maps.googleapis.com/maps/api/js?v=3&callback=initMap">
</script>
